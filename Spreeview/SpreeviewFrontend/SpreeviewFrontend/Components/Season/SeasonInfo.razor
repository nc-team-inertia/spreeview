@inject NavigationManager Navigation

@using CommonLibrary.DataClasses.SeasonModel
@using CommonLibrary.DataClasses.SeriesModel
@rendermode InteractiveServer

<!--Episodes section-->
<div class="flex gap-4 items-center py-4">
	<span class="px-3 py-1 bg-purple-600 shadow-purple-small text-white rounded-lg">Episodes</span>
	<div class="flex gap-2 flex-wrap">
		@for (var i = 1; i <= season.Episodes.Count; i++)
		{
			var episodeId = @season.Episodes[i - 1].Id;
			var episodeNumber = @season.Episodes[i - 1].EpisodeNumber;
			<button class="bg-black text-white px-3 py-1 rounded-lg shadow-purple-small click-transition" @onclick="() => setEpisode((episodeId, episodeNumber))">@i</button>
		}
	</div>
</div>

@code {
	private string GetEpisodeUrl() => $"/series/{seriesId}?season={season.SeasonNumber}&episode={EpisodeNumber}";

	[Parameter]
	public SeasonGetDTO season { get; set; }

	[Parameter]
	public EventCallback<(int, int)> SelectEpisode { get; set; }

	public int EpisodeNumber { get; set; }

	[Parameter]
	public int seriesId { get; set; }

	private async Task setEpisode((int Id, int Number) episode)
	{
		EpisodeNumber = episode.Number;
		await SelectEpisode.InvokeAsync((episode.Id, episode.Number));
		StateHasChanged();
		Navigation.NavigateTo(GetEpisodeUrl());
	}
}
